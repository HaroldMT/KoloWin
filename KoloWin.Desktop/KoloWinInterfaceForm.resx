<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="navKoloWin.Appearance.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Atgv0/oBwPQ/OVqdzMbjf+MAAAAASUVORK5CYII=
</value>
  </data>
</root>